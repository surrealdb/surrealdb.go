name: test
on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:
  workflow_dispatch:
permissions:
  contents: read

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          # v3.0.0-alpha.7 with Go 1.25.0
          - surrealdb-version: 'v3.0.0-alpha.7'
            go-version: '1.25.0'
            connection-type: 'ws'
            surrealdb-url: 'ws://localhost:8000/rpc'
          - surrealdb-version: 'v3.0.0-alpha.7'
            go-version: '1.25.0'
            connection-type: 'http'
            surrealdb-url: 'http://localhost:8000'
          # v2.3.7 with Go 1.25.0, http
          - surrealdb-version: 'v2.3.7'
            go-version: '1.25.0'
            connection-type: 'http'
            surrealdb-url: 'http://localhost:8000'
          # v2.3.7 with Go 1.25.0, http, surrealcbor
          - surrealdb-version: 'v2.3.7'
            go-version: '1.25.0'
            connection-type: 'http'
            surrealdb-url: 'http://localhost:8000'
            surrealdb-cbor-impl: 'surrealcbor'
          # v2.3.7 with Go 1.25.0, gorilla/websocket
          - surrealdb-version: 'v2.3.7'
            go-version: '1.25.0'
            connection-type: 'ws'
            surrealdb-url: 'ws://localhost:8000/rpc'
          # v2.3.7 with Go 1.25.0, gorilla/websocket, surrealcbor
          - surrealdb-version: 'v2.3.7'
            go-version: '1.25.0'
            connection-type: 'ws'
            surrealdb-url: 'ws://localhost:8000/rpc'
            surrealdb-cbor-impl: 'surrealcbor'
          # v2.3.7 with Go 1.25.0, gorilla/websocket, reconnection
          - surrealdb-version: 'v2.3.7'
            go-version: '1.25.0'
            connection-type: 'ws'
            surrealdb-url: 'ws://localhost:8000/rpc'
            surrealdb-reconnection-check-interval: '1s'
          # v2.3.7 with Go 1.25.0,  gws
          - surrealdb-version: 'v2.3.7'
            go-version: '1.25.0'
            connection-type: 'ws'
            surrealdb-url: 'ws://localhost:8000/rpc'
            surrealdb-connection-impl: 'gws'
          # v2.3.7 with Go 1.25.0,  gws, reconnection
          - surrealdb-version: 'v2.3.7'
            go-version: '1.25.0'
            connection-type: 'ws'
            surrealdb-url: 'ws://localhost:8000/rpc'
            surrealdb-connection-impl: 'gws'
            surrealdb-reconnection-check-interval: '1s'
          # v2.3.7 with Go 1.24.6
          - surrealdb-version: 'v2.3.7'
            go-version: '1.24.6'
            connection-type: 'ws'
            surrealdb-url: 'ws://localhost:8000/rpc'
          - surrealdb-version: 'v2.3.7'
            go-version: '1.24.6'
            connection-type: 'http'
            surrealdb-url: 'http://localhost:8000'
          # v2.2.7 with Go 1.25.0
          - surrealdb-version: 'v2.2.7'
            go-version: '1.25.0'
            connection-type: 'ws'
            surrealdb-url: 'ws://localhost:8000/rpc'
          - surrealdb-version: 'v2.2.7'
            go-version: '1.25.0'
            connection-type: 'http'
            surrealdb-url: 'http://localhost:8000'
    permissions:
      contents: read
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
          cache-dependency-path: go.sum
      - name: Start SurrealDB
        run: |
          docker run -d --name surrealdb -p 8000:8000 surrealdb/surrealdb:${{ matrix.surrealdb-version }} start --user root --pass root
          # Wait for SurrealDB to be ready
          for i in {1..30}; do
            if curl -f http://localhost:8000/health 2>/dev/null; then
              echo "SurrealDB is ready"
              break
            fi
            echo "Waiting for SurrealDB to start... ($i/30)"
            sleep 2
          done
      - name: Test ${{ matrix.connection-type }} connection
        run: go test -v -cover ./...
        env:
          SURREALDB_URL: ${{ matrix.surrealdb-url }}
          SURREALDB_CONNECTION_IMPL: ${{ matrix.surrealdb-connection-impl }}
          SURREALDB_CBOR_IMPL: ${{ matrix.surrealdb-cbor-impl }}
          SURREALDB_RECONNECTION_CHECK_INTERVAL: ${{ matrix.surrealdb-reconnection-check-interval }}

  surrealnote-e2e:
    name: SurrealNote E2E Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: 'stable'
          check-latest: true
          cache-dependency-path: contrib/surrealnote/go.sum

      # Start SurrealDB
      - name: Start SurrealDB
        run: |
          docker run -d --name surrealdb -p 8000:8000 surrealdb/surrealdb:v2.3.7 start --user root --pass root
          # Wait for SurrealDB to be ready
          for i in {1..30}; do
            if curl -f http://localhost:8000/health 2>/dev/null; then
              echo "SurrealDB is ready"
              break
            fi
            echo "Waiting for SurrealDB to start... ($i/30)"
            sleep 2
          done

      # Run E2E migration test using Makefile
      - name: Run SurrealNote E2E Migration Test
        run: |
          cd contrib/surrealnote
          # The Makefile will handle PostgreSQL start/stop automatically
          go test -v -timeout 10m -run TestE2E_migrationFlow ./...
        env:
          SURREALDB_URL: ws://localhost:8000/rpc

      # Clean up containers
      - name: Clean up containers
        if: always()
        run: |
          cd contrib/surrealnote
          make postgres-remove || true
          docker stop surrealdb || true
          docker rm surrealdb || true
